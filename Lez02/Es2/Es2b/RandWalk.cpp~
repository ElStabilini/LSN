//RANDOM WALK CONTINUO con length-step e in dimensione "dim"
vector<Position> WalkCon(int length, Random& rnd) {

	double R=1; //lunghezza dello step
	Position pos0(0, 0, 0);
	vector<Position> traj; 
	vector<double> Icoo (length, rnd.Rannyu(-R,R));
	vector<double> IIcoo;
	//in questo caso, dato che mi muovo nel continuo ho bisogno di estrarre almeno una coppia di numeri per definire la direzione
	vector<int> sign1 (length, rnd.Choice(-1,1));
	vector<int> sign2 (length, rnd.Choice(-1,1));
	
	traj.push_back(pos0);
	
	for(int i=0; i<length; i++) {
	
		double x = traj[i].getX();
		double y = traj[i].getY();
		double z = traj[i].getZ();
		
		 //la prima coordinata che estraggo è un numero a caso che è compreso entro la lunghezza del raggio
		double r = sqrt(pow(R,2) - pow(Icoo[i],2)); 
		if(r==0)
			IIcoo.push_back(0);
		else {
			IIcoo.push_back(rnd.Rannyu(-r,r));
			}
		
			
	 /*NB Icoo[i]: spostamento che compio lungo l'asse y;
	 IIcoo[i]: spostamento che compio lungo l'asse z;
	 */
		
		/*eg. al passo 0 aggiungo un elemento al vettore (che adesso ha indici 0 e 1, 
			ovvero i e i+1, in generale avrà i+1 elementi)
			questo elemento è una copia del precedente
			evolvo questo elemento (quello con indice i+1) portandomi in una nuova poszione)
		*/
		
		// NB: inserisci un modo per accedere ai metodi privati e modificarli
		double newX = x + sign2[i]*sqrt( pow(R,2) - pow(Icoo[i],2) - pow(IIcoo[i],2) );
		double newY = y + Icoo[i];
		double newZ = z + sign1[i]*IIcoo[i];
		
		traj.push_back( Position(newX, newY, newZ) );
	}
	
	return traj;
};

